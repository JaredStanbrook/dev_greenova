{
  "tasks": [
    {
      "args": [
        "-c",
        "autopep8 --in-place --aggressive --aggressive \"${file}\""
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Format with autopep8",
      "presentation": {
        "clear": true,
        "panel": "shared",
        "reveal": "silent"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "args": ["-c", "isort \"${file}\""],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Sort imports with isort",
      "presentation": {
        "clear": true,
        "panel": "shared",
        "reveal": "silent"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "args": ["-c", "pylint \"${file}\""],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Lint with pylint",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": {
        "fileLocation": ["relative", "${workspaceFolder}"],
        "owner": "python",
        "pattern": {
          "column": 3,
          "file": 1,
          "line": 2,
          "message": 5,
          "regexp": "^(.+):(\\d+):(\\d+):\\s+(warning|error|fatal):\\s+(.*)$",
          "severity": 4
        }
      },
      "type": "shell"
    },
    {
      "args": ["-c", "mypy \"${file}\""],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Type check with mypy",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": {
        "fileLocation": ["relative", "${workspaceFolder}"],
        "owner": "python",
        "pattern": {
          "file": 1,
          "line": 2,
          "message": 4,
          "regexp": "^(.+):(\\d+):\\s+(error|note):\\s+(.*)$",
          "severity": 3
        }
      },
      "type": "shell"
    },
    {
      "args": [
        "-c",
        "mypy --ignore-missing-imports --disallow-untyped-defs --no-implicit-optional \"${file}\""
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Type check with mypy (standard)",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": {
        "fileLocation": ["relative", "${workspaceFolder}"],
        "owner": "python",
        "pattern": {
          "file": 1,
          "line": 2,
          "message": 4,
          "regexp": "^(.+):(\\d+):\\s+(error|note):\\s+(.*)$",
          "severity": 3
        }
      },
      "type": "shell"
    },
    {
      "args": [
        "-c",
        "mypy --config-file \"${workspaceFolder}/mypy.ini\" \"${file}\""
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Type check with mypy (Django)",
      "options": {
        "env": {
          "PYTHONPATH": "/workspaces/greenova"
        }
      },
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": {
        "fileLocation": ["relative", "${workspaceFolder}"],
        "owner": "python",
        "pattern": {
          "file": 1,
          "line": 2,
          "message": 4,
          "regexp": "^(.+):(\\d+):\\s+(error|note):\\s+(.*)$",
          "severity": 3
        }
      },
      "type": "shell"
    },
    {
      "args": ["-c", "bandit -r \"${file}\" --skip B101"],
      "command": "/bin/sh",
      "group": "none",
      "label": "Python: Security check with bandit",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "dependsOn": [
        "Python: Sort imports with isort",
        "Python: Format with autopep8",
        "Python: Lint with pylint",
        "Python: Type check with mypy (standard)",
        "Python: Security check with bandit"
      ],
      "dependsOrder": "sequence",
      "group": "none",
      "label": "Python: Fix all",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "args": [
        "-c",
        "cd greenova && python3 manage.py runserver 0.0.0.0:8000"
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Django: Run server",
      "presentation": {
        "panel": "dedicated",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "args": [
        "-c",
        "cd greenova && python manage.py create_missing_profiles"
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Django: Create Missing Profiles",
      "presentation": {
        "panel": "dedicated",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "label": "Django: Refresh migrations",
      "dependsOn": [
        "Django: Delete Migrations",
        "Django: Create migrations",
        "Django: Apply migrations"
      ],
      "dependsOrder": "sequence",
      "type": "shell",
      "group": "none",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": []
    },
    {
      "args": ["-c", "cd greenova && python manage.py makemigrations"],
      "command": "/bin/sh",
      "group": "none",
      "label": "Django: Create migrations",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "args": ["-c", "cd greenova && python manage.py migrate"],
      "command": "/bin/sh",
      "group": "none",
      "label": "Django: Apply migrations",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    },
    {
      "args": [
        "-c",
        "cd greenova && find */migrations -name \"*.py\" ! -name \"__init__.py\" -delete"
      ],
      "command": "/bin/sh",
      "group": "none",
      "label": "Django: Delete Migrations",
      "presentation": {
        "panel": "shared",
        "reveal": "always"
      },
      "problemMatcher": [],
      "type": "shell"
    }
  ],
  "version": "2.0.0"
}
