{
  // Workspace Settings
  "files.autoSave": "afterDelay",
  "files.autoSaveDelay": 1000,
  "files.exclude": {
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/*.pyc": true,
    ".env": false,
    ".venv": false,
    "node_modules": true,
    ".coverage": true,
    "htmlcov": true
  },
  "files.associations": {
    "*.html": "django-html",
    "*.djhtml": "django-html",
    "requirements*.txt": "pip-requirements",
    ".env*": "dotenv"
  },
  // Git Configuration
  "git.blame.statusBarItem.enabled": true,
  "git.blame.editorDecoration.enabled": true,
  // Github Configuration
  "github.showAvatar": false,
  // Editor Core Settings
  "editor.formatOnSave": true,
  "editor.rulers": [
    79,
    88
  ],
  "editor.tabSize": 4,
  "editor.detectIndentation": true,
  "editor.insertSpaces": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": true,
  "editor.suggestSelection": "first",
  "editor.minimap.maxColumn": 88,
  "editor.formatOnPaste": true,
  "editor.find.replaceHistory": "workspace",
  // Python Configuration
  "python.languageServer": "Pylance",
  "python.defaultInterpreterPath": "/workspaces/dev_greenova/.venv/bin/python",
  "python.analysis.typeCheckingMode": "basic",
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.indexing": true,
  "python.analysis.exclude": [
    "**/node_modules/**",
    "**/.venv/**",
    "**/greenova.bak/**",
    "./greenova.bak/**"
  ],
  "python.analysis.aiCodeActions": {
    "generateSymbol": true
  },
  "python.formatting.provider": "black",
  // Testing Configuration
  "python.testing.pytestEnabled": true,
  "python.testing.unittestEnabled": false,
  "python.testing.pytestArgs": [
    "greenova/tests",
    "-v",
    "--tb=short",
    "--cov"
  ],
  // Python Formatting
  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": "explicit"
    }
  },
  "black-formatter.args": [
    "--line-length=79",
    "--target-version=py313",
    "--skip-string-normalization",
    "--skip-magic-trailing-comma",
    "--safe"
  ],
  // Django Template Settings
  "[django-html]": {
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "monosans.djlint",
    "editor.tabSize": 2
  },
  "djlint.enableLinting": true,
  "djlint.profile": "django",
  "djlint.ignore": [
    "H006",
    "H031",
    "H014"
  ],
  "djlint.maxLineLength": 79,
  "djlint.exclude": [
    "**/node_modules/**",
    "**/.venv/**",
    "**/greenova.bak/**",
    "**/.github/**"
  ],
  "djlint.useVenv": true,
  // JavaScript & Frontend Settings
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.tabSize": 2
  },
  "eslint.validate": [
    "javascript"
  ],
  "prettier.configPath": "${workspaceFolder}/.prettierrc",
  "prettier.tabWidth": 2,
  "prettier.printWidth": 79,
  // Markdown Settings
  "[markdown]": {
    "editor.defaultFormatter": "yzhang.markdown-all-in-one",
    "editor.formatOnSave": true
  },
  "markdownlint.config": {
    "MD013": {
      "line_length": 79
    },
    "MD033": false
  },
  "markdown.validate.enabled": true,
  // Shell Script Settings
  "[shellscript]": {
    "editor.defaultFormatter": "timonwong.shellcheck",
    "files.eol": "\n"
  },
  "shellcheck.enable": true,
  "shellcheck.useWorkspaceRootAsCwd": true,
  "shellcheck.run": "onType",
  // Debug Configuration
  "debug.inlineValues": "auto",
  "debugpy.debugJustMyCode": false,
  // GitHub Copilot Settings
  "github.copilot.enable": {
    "*": true,
    "python": true,
    "django-html": true,
    "javascript": true,
    "markdown": true
  },
  "github.copilot.nextEditSuggestions.enabled": true,
  "editor.inlineSuggest.edits.renderSideBySide": "auto",
  "github.copilot.chat.editor.temporalContext.enabled": true,
  "github.copilot.chat.edits.codesearch.enabled": true,
  "chat.promptFiles": false,
  // EditorConfig
  "editorconfig.generateAuto": false,
  // Node Version Specific
  "npm.packageManager": "npm",
  "npm.nodeVersionManagement": {
    "runtime": "23.7.0",
    "manager": "nvm"
  },
  // Workspace Specific
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "/bin/bash",
      "env": {
        "PYTHONPATH": "/workspaces/dev_greenova",
        "NODE_ENV": "development"
      }
    }
  }
}