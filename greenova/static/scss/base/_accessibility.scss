/**
 * Accessibility Utilities
 *
 * Styles for improved accessibility and screen reader support
 */

// Import core abstracts
@use "sass:color";
@use "sass:map";
@use "sass:math";
@use '../abstracts/variables' as *;
@use '../abstracts/mixins' as *;
@use '../abstracts/functions' as *;

// Skip to main content link
.skip-link {
  @include visually-hidden;

  &:focus {
    position: fixed;
    top: $greenova-spacing-sm;
    left: $greenova-spacing-sm;
    padding: $greenova-padding-sm $greenova-padding-base;
    background: $greenova-green-primary;
    color: $greenova-text-primary-light;
    z-index: $greenova-z-tooltip;
    width: auto;
    height: auto;
    clip: auto;
    text-decoration: none;
    border-radius: $greenova-border-radius-sm;
  }
}

// Focus styles
:focus-visible {
  outline: 3px solid $greenova-green-primary;
  outline-offset: 2px;
}

// Ensure sufficient color contrast
@each $variant in (primary, secondary, tertiary) {
  .text-#{$variant} {
    $color: if($variant == 'primary', $green-primary,
             if($variant == 'secondary', $green-secondary,
             if($variant == 'tertiary', $green-tertiary, $green-primary)));
    
    // Use relative luminance to determine text color
    $luminance: calc((
      color.channel($color, "red") * 0.299 + 
      color.channel($color, "green") * 0.587 + 
      color.channel($color, "blue") * 0.114
    ) / 255);
    
    @if $luminance > 0.5 {
      color: $text-primary-dark;
    } @else {
      color: $text-primary-light;
    }
  }
}

// Hide content visually but keep it accessible to screen readers
.sr-only {
  @include visually-hidden;
}

// Make sure interactive elements have proper focus styles
button,
[role='button'],
a {
  &:focus-visible {
    outline: 3px solid $greenova-green-primary;
    outline-offset: 2px;
  }
}

// Ensure proper color contrast for form elements
input,
select,
textarea {
  &::placeholder {
    color: $greenova-text-tertiary-dark;
    opacity: 1;
  }
}

// Add focus styles for form elements
input,
select,
textarea {
  &:focus {
    outline: 2px solid $greenova-green-primary;
    outline-offset: 0;
  }
}

// Error state styling with proper contrast
.error {
  color: $greenova-warning-text;
  background-color: $greenova-warning-background;
  border-radius: $greenova-border-radius-sm;
  padding: $greenova-padding-sm;
}

// Success state styling with proper contrast
.success {
  color: $greenova-success-text;
  background-color: $greenova-success-background;
  border-radius: $greenova-border-radius-sm;
  padding: $greenova-padding-sm;
}

// ARIA live regions
[aria-live] {
  position: fixed;
  top: -10000px;
  left: -10000px;
  width: 1px;
  height: 1px;
  overflow: hidden;

  &[aria-live='polite'],
  &[aria-live='assertive'] {
    position: static;
    width: auto;
    height: auto;
  }
}

// Reduced motion preferences
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// High contrast mode support
@media (forced-colors: active) {
  .button,
  [role='button'] {
    border: 2px solid currentColor;
  }
}
