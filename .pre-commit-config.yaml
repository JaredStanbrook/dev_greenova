# .pre-commit-config.yaml
exclude: '^$'
fail_fast: false # Add this line to continue running hooks even when some fail
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
        exclude: '.*\.(html|djhtml|jinja)$'
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=500']
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: check-merge-conflict
      - id: detect-private-key
      - id: requirements-txt-fixer
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']
      - id: trailing-whitespace
        args: ['--markdown-linebreak-ext=md']

  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-eval
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: rst-backticks
      - id: rst-directive-colons
      - id: rst-inline-touching-normal
      - id: text-unicode-replacement-char

  - repo: https://github.com/pre-commit/sync-pre-commit-deps
    rev: v0.0.3
    hooks:
      - id: sync-pre-commit-deps

  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade

  - repo: https://github.com/hhatto/autopep8
    rev: v2.3.2
    hooks:
      - id: autopep8
        args:
          [
            '--max-line-length=88',
            '--aggressive',
            '--aggressive',
            '--aggressive',
            '--in-place',
          ]

  - repo: https://github.com/pycqa/isort
    rev: 6.0.1
    hooks:
      - id: isort

  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        args: ['-c', '.bandit', '-r', '--config', '.bandit']
        exclude: 'tests/'

  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.17.2
    hooks:
      - id: markdownlint-cli2
        args: ['--config', '.markdownlint-cli2.jsonc', '--fix']

  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.10.0
    hooks:
      - id: shellcheck
        language: system
        entry: shellcheck
        args: ['-e', 'SC2155,SC2034'] # Ignore these specific shellcheck warnings
        types: [shell]
        files: '.*\.sh$'
        exclude: '.*\.envrc$|.*\.env$'

  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v9.25.1
    hooks:
      - id: eslint
        files: \.(js|ts|jsx|tsx)$
        types: [file]
        args: ['--fix', '--max-warnings=9999']
        additional_dependencies:
          - eslint@8.56.0
          - prettier@3.2.4
          - eslint-config-prettier@9.1.0
          - eslint-plugin-prettier@5.1.3

  - repo: https://github.com/thibaudcolas/pre-commit-stylelint
    rev: v16.19.1
    hooks:
      - id: stylelint
        files: \.(css|scss|sass|less)$ # Remove html from stylelint
        args: ['--fix', '--config', 'stylelint.config.js']
        additional_dependencies:
          - stylelint@16.17.0
          - stylelint-config-recommended@15.0.0
          - stylelint-config-standard@37.0.0
          - stylelint-config-tailwindcss@1.0.0
          - postcss-html@1.6.0

  - repo: https://github.com/djlint/djLint
    rev: v1.36.4
    hooks:
      - id: djlint-django
        files: \.(html|djhtml|jinja)$
        args:
          - --reformat
          - --quiet
          - --indent=2
          - --preserve-blank-lines
          - --preserve-leading-space
          - --profile=django
          - --max-line-length=88
          - --use-gitignore
          - --ignore=H014,H015,T002

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [javascript, css, yaml, markdown]
        exclude: '.*\.html$' # Exclude HTML files from prettier
        args: ['--config', '${REPO_ROOT_DIR}/.prettierrc']

  - repo: https://github.com/adamchainz/django-upgrade
    rev: 1.24.0
    hooks:
      - id: django-upgrade
        args: ['--target-version', '4.1']

  - repo: local
    hooks:
      - id: safety-check
        name: Safety dependency checker
        # Use the new scan command in non-interactive mode with environment-only scanning
        entry: bash -c 'pip install safety && safety check --ignore 65278,66704,65212,65647,62556,62044,75180'
        language: system
        types: [python]
        pass_filenames: false

      - id: autopep8-aggressive
        name: autopep8 (aggressive)
        entry: autopep8
        language: system
        types: [python]
        args:
          [
            '--in-place',
            '--aggressive',
            '--aggressive',
            '--aggressive',
            '--max-line-length=88',
          ]
        exclude: 'migrations/'

      - id: eslint
        name: eslint
        entry: npx eslint --fix
        language: system
        types: [javascript]
        args: ['--max-warnings=9999']

      - id: mypy-check
        name: mypy (script)
        language: python
        # Use bash -c to set environment variables before running mypy
        entry: bash -c 'export PYTHONPATH="/workspaces/greenova:/workspaces/greenova/greenova"; export DJANGO_SETTINGS_MODULE="tools.pre_commit.mock_settings"; mypy --config-file=mypy.ini "$@"' --
        types: [python]
        exclude: 'migrations/|settings.py|\\.git/|\\.mypy_cache/|\\.pytest_cache/'
        additional_dependencies:
          [
            'mypy==1.15.0',
            'django-stubs==5.1.3',
            'django-stubs-ext==5.1.3',
            'types-python-dateutil==2.9.0.20241206',
            'types-PyYAML==6.0.12.20241230',
            'types-setuptools==76.0.0.20250313',
            'annotated-types==0.7.0',
            'microsoft-python-type-stubs @ git+https://github.com/microsoft/python-type-stubs.git@dcb5c8c2a61a2e4653b4becc9f20f6c42858a701',
            'mypy-extensions==1.0.0',
            'pytest-stub==1.1.0',
            'types-Pillow==10.2.0.20240822',
            'types-python-dateutil==2.9.0.20241206',
            'types-requests==2.32.0.20250328',
            'types-stdlib-list==0.8.3.4',
            'typing_extensions==4.13.1',
            'django-allauth==0.63.3',
            'django-cors-headers',
            'django-debug-toolbar',
            'django-htmx',
            'django-hyperscript',
            'django-matplotlib',
            'django-template-partials',
            'django-tailwind',
            'django-silk',
          ]
        pass_filenames: true # Ensure filenames are passed to the script

      - id: pylint-local
        name: pylint (no django)
        entry: tools/pre_commit/patches/pylint_no_django.py # Path to the local script
        language: script # Use 'script' for executable scripts
        types: [python]
        exclude: 'migrations/'
